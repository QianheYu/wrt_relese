#!/bin/bash
# 设置路由时需要配置具体的物理接口，目标和网关是固定的
# 设置NAT规则时名称是自定义的，重写地址是hotplug脚本更新的，其他的协议簇固定为IPv6，出站区域固定为wan
# 希望NAT规则的名称就是物理接口的名称


# CreateNat6
create_nat() {
    INTERFACE=$1
    if [[ -z "$INTERFACE" ]]; then
        echo "Please enter interface"
        exit 0
    fi
    # 检查是否已经存在端口路由
    ipv6route=$(
        uci show network | grep -Eo 'network.@route6\[[0-9]*\]' | sort -u | \
        while read -r line; do
            if [[ "$(uci get ${line}.interface)" == "$INTERFACE" ]]; then
                echo $(echo $line | grep -Eo '@route6\[[0-9]*\]')
                break
            fi
        done
    )
    # 如果没有则新建路由
    if [[ -z "$ipv6route" ]]; then
        eval ipv6route=$(uci add network route6)
        echo "$INTERFACE IPv6 route not found, create a new"
    fi
    # 路由id为空的异常处理
    if [[ -z "$ipv6route" ]]; then
        echo "route still empty :$ipv6route"
        exit 0
    fi
    echo "routeid is $ipv6route"
    uci set network.wan6.reqaddress=try
    uci set network.$ipv6route.interface=$INTERFACE
    uci set network.$ipv6route.target='::/0'
    uci set network.$ipv6route.gateway='fe80::1'
    uci set network.$ipv6route.disabled=1
    uci commit network
    # 检查是否已经存在端口年
    natid=$(
        uci show firewall | grep -Eo 'firewall.@nat\[[0-9]*\]' | sort -u | \
        while read -r line; do
            if [[ "$(uci get ${line}.name)" == "${INTERFACE}-NAT6" ]]; then
                echo $(echo $line | grep -Eo '@nat\[[0-9]*\]')
                break
            fi
        done
    )
    # 如果没有则新建NAT
    if [[ -z "$natid" ]]; then
        eval natid=$(uci add firewall nat)
        echo "$INTERFACE IPv6 NAT not found, create a new"
    fi
    # NAT为空的异常处理
    if [[ -z "$natid" ]]; then
        echo "natid still empty :$natid"
        exit 0
    fi
    echo "natid is $natid"
    uci set firewall.$natid.name=$INTERFACE-NAT6
    uci set firewall.$natid.family=ipv6
    uci set firewall.$natid.src=wan
    uci set firewall.$natid.target=SNAT
    uci set firewall.$natid.snat_ip=$(ip -6 addr show dev $(uci get network.${INTERFACE}.device) | grep inet6 | awk '{print $2}' | grep -v ^fe80 | head -n 1 | cut -d '/' -f 1)
    uci set firewall.$natid.proto=all
    uci set firewall.$natid.enabled=0
    uci commit firewall

    echo -e "#!/bin/bash
log=/tmp/log/\${INTERFACE}-NAT6.log
time=\"[\$(date)]\"

echo \"\$time action \$ACTION\" >> \$log
if [[ \"\$ACTION\\\" == \"ifdown\" ]]; then
    echo \"not ifup exit\" >> \$log
    exit 0
fi

if [[ \"no\" == \"\$(uci get network.wan6.reqprefix)\" ]]; then
    echo \\\"\$time nat6 enabled\" >> \$log
    wan_ipv6=\$(ip -6 addr show dev \$(uci get network.${INTERFACE}.device) | grep inet6 | awk '{print \$2}' | grep -v ^fe80 | head -n 1 | cut -d '/' -f 1)
    if [[ ! -z \$wan_ipv6 ]]; then
        uci set firewall.$natid.snat_ip=\$wan_ipv6
        uci commit firewall
        echo \"\$time update ipv6 \$wan_ipv6\" >> \\\$log
    fi
fi" > /etc/hotplug.d/iface/90-$INTERFACE-NAT6
   chmod +x /etc/hotplug.d/iface/90-$INTERFACE-NAT6
   echo "$INTERFACE IPv6 NAT Created"
}

remove_nat() {
    INTERFACE=$1
    if [[ -z "$INTERFACE" ]]; then
        echo "Please enter interface"
        exit 0
    fi
    disable_nat() $INTERFACE
    uci set network.$INTERFACE.reqprefix=auto
    uci show network | grep -Eo 'network.@route6\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.interface)" == "$INTERFACE" ]]; then
            uci del ${line}
            uci commit
            break
        fi
    done
    uci show firewall | grep -Eo 'firewall.@nat\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.name)" == "$INTERFACE-NAT6" ]]; then
            uci del ${line}
            uci commit
            break
        fi
    done

    rm /etc/hotplug.d/iface/90-$INTERFACE-NAT6
    # 如果已经没有nat设置了就直接恢复公网IPv6
    if [[ "$(uci show firewall | grep -Eo 'firewall.@nat\[[0-9]*\]' | sort -u | wc -l)" == "0" ]]; then
        dhcpv6-mod default
        exit 0
    fi
    # 如果其他的nat已经关闭了就恢复公网IPv6
    uci show firewall | grep -Eo 'firewall.@nat\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.enabled)" == "1" ]]; then
            break
        fi
        dhcpv6-mod default
        break
    done
    echo "$INTERFACE IPv6 NAT Removed"
}

enable_nat() {
    INTERFACE=$1
    if [[ -z "$INTERFACE" ]]; then
        echo "Please enter interface"
        exit 0
    fi
    uci set network.$INTERFACE.reqprefix=no
    uci show network | grep -Eo 'network.@route6\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.interface)" == "$INTERFACE" ]]; then
            uci set ${line}.disabled=0
            uci commit
            break
        fi
    done
    uci show firewall | grep -Eo 'firewall.@nat\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.name)" == "$INTERFACE-NAT6" ]]; then
            uci set ${line}.enabled=1
            uci commit
            break
        fi
    done
    dhcpv6-mod nat
    ifup $INTERFACE
    ifup lan
    echo "$INTERFACE IPv6 NAT Enabled"
}

disable_nat() {
    INTERFACE=$1
    if [[ -z "$INTERFACE" ]]; then
        echo "Please enter interface"
        exit 0
    fi
    uci set network.$INTERFACE.reqprefix=auto
    uci show network | grep -Eo 'network.@route6\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.interface)" == "$INTERFACE" ]]; then
            uci set ${line}.disabled=1
            uci commit
            break
        fi
    done
    uci show firewall | grep -Eo 'firewall.@nat\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.name)" == "$INTERFACE-NAT6" ]]; then
            uci set ${line}.enabled=0
            uci commit
            break
        fi
    done

    # 检查是否所有的NAT6都关闭了，如果都关闭了，就开启公网IPv6配置
    uci show firewall | grep -Eo 'firewall.@nat\[[0-9]*\]' | sort -u | \
    while read -r line; do
        if [[ "$(uci get ${line}.enabled)" == "1" ]]; then
            continue
        fi
        dhcpv6-mod default
        break
    done
    ifup $INTERFACE
    ifup lan
    echo "$INTERFACE IPv6 NAT Disabled"
}


# 检查是否提供了操作和接口名
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 {create|remove|enable|disable} <interface>"
    exit 1
fi

# 获取操作和接口名
operation=$1
interface=$2

case $operation in
    create)
        # 创建NAT配置
        create_nat $interface
        ;;
    remove)
        # 移除NAT配置
        remove_nat $interface
        ;;
    enable)
        # 启用NAT配置
        enable_nat $interface
        ;;
    disable)
        # 禁用NAT配置
        disable_nat $interface
        ;;
    *)
        echo "Invalid operation: $operation"
        echo "Usage: $0 {create|remove|enable|disable} <interface>"
        exit 1
        ;;
esac
